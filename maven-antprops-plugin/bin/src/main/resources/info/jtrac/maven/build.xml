<?xml version="1.0" encoding="UTF-8"?>
<project name="@@project.name@@" basedir=".">    
    
    <property file="build.properties"/>
    <property file="build-deps.properties"/>    
    <property name="war.name" value="@@project.name@@"/>    
    
    <target name="clean">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="target"/>
        </delete>      
    </target>      
    
    <target name="compile">
        <mkdir dir="target/classes"/>        
        <javac srcdir="src/main/java" destdir="target/classes" debug="true" classpath="${test.jars}"/>
        <copy todir="target/classes">
            <fileset dir="src/main/java" excludes="**/*.java"/>
        </copy>         
        <copy todir="target/classes" failonerror="false">
            <fileset dir="src/main/resources"/>
        </copy>              
    </target>             
    
    <target name="compile-test" depends="compile">
        <mkdir dir="target/test-classes"/>
        <javac srcdir="src/test/java" destdir="target/test-classes" debug="true">
            <classpath>
                <path path="target/classes"/>
                <path path="${test.jars}"/>
            </classpath>
        </javac>
        <copy todir="target/test-classes">
            <fileset dir="src/test/java" excludes="**/*.java"/>
        </copy>      
    </target>    
    
    <path id="test.classpath">
        <path path="target/classes"/>
        <path path="target/test-classes"/>
        <path path="${test.jars}"/>                                            
    </path>    
    
    <target name="test" depends="compile-test">
        <test-macro/>     
    </target>   
              
    <macrodef name="test-macro">
        <attribute name="includes" default="**/*Test.java"/>  
        <attribute name="haltonfailure" default="false"/>
        <sequential>
            <mkdir dir="target/reports"/>            
            <junit fork="true" dir="." tempdir="target" haltonfailure="@{haltonfailure}">
                <classpath refid="test.classpath"/>
                <formatter type="brief" usefile="false"/>
                <formatter type="xml"/>
                <batchtest todir="target/reports">
                    <fileset dir="src/test/java" includes="@{includes}"/>
                </batchtest>
            </junit>         
        </sequential>
    </macrodef>
              
    <target name="war-exploded" depends="compile">
        <war-exploded/>        
    </target>
    
    <macrodef name="war-exploded">
        <attribute name="deployDir" default="target/${war.name}"/>
        <sequential>
            <copy todir="@{deployDir}">
                <fileset dir="src/main/webapp"/>
            </copy>
            <copy todir="@{deployDir}/WEB-INF/classes">
                <fileset dir="target/classes"/>
            </copy>
            <copy todir="@{deployDir}/WEB-INF/lib" flatten="true">
                <fileset dir="${m2.repo}" includes="${runtime.jars}" casesensitive="false"/>         
            </copy>
        </sequential>
    </macrodef>          
    
    <target name="war" depends="war-exploded">       
        <zip destfile="target/${war.name}.war" basedir="target/${war.name}"/>
    </target>                
              
    <!-- ========================= TOMCAT ============================ -->        
    
    <target name="tomcat-war-exploded" depends="war-exploded">
        <war-exploded deployDir="${tomcat.home}/webapps/${war.name}"/>
    </target>
    
    <target name="tomcat-clean">   
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${tomcat.home}/work/Catalina/localhost/${war.name}"/>
            <fileset dir="${tomcat.home}/webapps/${war.name}"/>                            
        </delete>     
    </target>    
    
    <target name="tomcat-reload" depends="tomcat-war-exploded">
        <touch file="${tomcat.home}/webapps/${war.name}/WEB-INF/web.xml"/>
    </target>
    
    <target name="tomcat-start-debug" depends="tomcat-war-exploded">         
        <java jar="${tomcat.home}/bin/bootstrap.jar" fork="true">            
            <jvmarg value="-Dcatalina.home=${tomcat.home}"/>
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"/>
            <jvmarg value="-Dfile.encoding=UTF-8"/>          
        </java>
    </target>
    
    <target name="tomcat-stop" depends="tomcat-status" if="tomcat.running">
        <java jar="${tomcat.home}/bin/bootstrap.jar" fork="true">
            <jvmarg value="-Dcatalina.home=${tomcat.home}"/>
            <arg value="stop"/>
        </java>
    </target>
    
    <target name="tomcat-status">
        <condition property="tomcat.running">
            <socket server="localhost" port="8080"/>
        </condition>        
    </target>    
              
</project>
